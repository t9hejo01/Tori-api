openapi: 3.1.0
info:
  title: Tori
  version: '1.0'
  description: This API is for selling used items.
  contact:
    name: Joona Heikkil√§
    email: t9hejo01@students.oamk.fi
servers:
  - url: 'http://localhost:3000'
paths:
  /users:
    post:
      summary: ''
      operationId: post-users
      responses:
        '201':
          description: Successfully created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: number
                    description: Unique ID of created user
        '400':
          description: Request has missing or malformed information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples: {}
      description: This endpoint is used to create new users to the system.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
            examples: {}
  '/user/{userid}':
    parameters:
      - schema:
          type: string
        name: userid
        in: path
        required: true
    get:
      summary: Get user information
      tags: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: get-user-userid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      description: This gets information of user
    delete:
      summary: Delete user
      operationId: delete-user-userid
      responses:
        '200':
          description: OK
        '401':
          description: |
            Unauthorized
        '404':
          description: User ID not found
      description: This operation will delete a user
      security:
        - HTTPBasic: []
    put:
      summary: Modify user
      operationId: put-user-userid
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: |-
        Modify specific user
         
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
  /Products:
    get:
      summary: Get information of products
      tags: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: get-Products
      description: Get product information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
    post:
      summary: Post products
      operationId: post-Products
      responses:
        '200':
          description: OK
        '201':
          description: Created
      description: This endpoint allows users to post information of products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
  /login:
    post:
      summary: Login
      operationId: post-login
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      description: This endpoint is used to login with username and password
      security:
        - HTTPBasic: []
components:
  schemas:
    UserInfo:
      title: UserInfo
      type: object
      properties:
        id:
          type: number
        username:
          type: string
        name:
          type: string
        email:
          type: string
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        errorDescription:
          type: string
      examples:
        - errorDescription: Missing email field
    Products:
      title: Products
      description: This endpoint allows to get information of products
      type: object
      examples:
        - productName: string
          category:
            clothing: string
            cars: string
            sportsEquipment: string
          price: 0
          location:
            city: string
            county: string
          postingDate: string
          deliveryType:
            deliveryType1: Shipping
            deliveryType2: Pickup
          sellerInfo:
            name: string
            email: string
            phone: 0
      properties:
        productId:
          type: number
        productName:
          type: string
        category:
          type: object
          properties:
            clothing:
              type: string
            cars:
              type: string
            sportsEquipment:
              type: string
        location:
          type: object
          properties:
            city:
              type: string
            county:
              type: string
        price:
          type: number
        postingDate:
          type: string
        deliveryType:
          type: object
          properties:
            deliveryType1:
              type: string
            deliveryType2:
              type: string
        sellerInfo:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: number
  securitySchemes:
    HTTPBasic:
      type: http
      scheme: basic
      description: ''